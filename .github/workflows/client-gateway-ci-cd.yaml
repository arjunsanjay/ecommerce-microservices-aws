name: Deploy Client Gateway

on:
  push:
    branches: [ main ]
    # Trigger only on changes in the client-gateway folder
    paths:
      - 'client-gateway/**' 
  workflow_dispatch:

env:
  AWS_REGION: ap-south-1
  # Change ECR repository name
  ECR_REPOSITORY: client-gateway 
  EKS_CLUSTER_NAME: ecommerce-cluster
  # Change Kubernetes deployment name
  K8S_DEPLOYMENT_NAME: client-deployment 
  # Change Kubernetes container name (matches name in client-deployment.yaml)
  K8S_CONTAINER_NAME: client-gateway 

jobs:
  build-and-deploy:
    name: Build Image and Deploy to EKS
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build using the correct service directory
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./client-gateway 
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Download Kubeconfig and Deploy to EKS
      run: |
        aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.EKS_CLUSTER_NAME }}
        # Use the correct K8S deployment and container names
        kubectl set image deployment/${{ env.K8S_DEPLOYMENT_NAME }} ${{ env.K8S_CONTAINER_NAME }}=${{ steps.build-image.outputs.image }}
